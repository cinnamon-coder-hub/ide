:toc: macro
toc::[]

= Cross-Platform Tooling

== Browser Plugins
There are tons of helpful browser plugins out there and it might be a matter of personal taste what you like to have installed. However, as we are heavily using github we want to promote https://github.com/buunguyen/octotree#octotree[octotree].
In case you also work with ZenHub you might want to install the https://www.zenhub.com/extension[Zenhub Browser Extension].

== Draw Diagrams
To draw diagrams for your project or for blueprints in devonfw, we recommend the following cross-platform tools:

* https://draw.io/[draw.io] is a powerful generic vector painting program (similar to visio). You can get a free open-source edition for your desktop from https://github.com/jgraph/drawio-desktop/releases[here].
* https://www.objectaid.com/[ObjectAid] is a nice and easy to use eclipse plugin that you can use to quickly create UML diagrams from existing code. While class-diagrams are supported for free, you need to buy a license if you want to use the other diagram types.
* https://plantuml.com/[PlantUML] is a great tool that can render UML diagrams from simple markup that can be easily managed in git or other version-control systems together with your code. Its simplicity allows branching and merging unlike other greedy binary UML data-formats.

== Git Client
If you are looking for a git client that works cross-platform we recommend to use https://git-fork.com/[Fork].


== Symbolic Links
With https://schinagl.priv.at/nt/hardlinkshellext/linkshellextension.html[symbolic links] you can use one file that is located inside one directory in multiple other directories, without copying the whole file the the other directories. The file is still only saved at the initial location, but can be accessed through the  created links in a much more comfortable way. So you are actually just linked to the original file and therefore don't have to worry about differing versions of the file in your directory. This is very helpful for testing our devon-ide, because e.g. the commandlets folder for testing is not the same as the commandlets folder for git-commits. 
Follow https://schinagl.priv.at/nt/hardlinkshellext/linkshellextension.html[these] installation and usage instructions first. 
Later on you can make symbolic links of files from your "git folder" and add them into the folder in which the testing is supposed to take place.
E.g. make a symbolic link of ´${DEVON_IDE_HOME}/workspaces/ide/scripts/src/main/resources/scripts/command/docker´ and insert it into the folder ´${DEVON_IDE_HOME}/scripts/command´.
Now changes you make in the first mentioned file  will directly be available in your testing environment through the created file-link in the testing environment.

== Tab Grouping For The Web Browser
https://addons.mozilla.org/en-US/firefox/addon/simple-tab-groups/[Simple Tab Groups] is a Firefox plugin that helps to separate tabs e.g. tabs for projekt A, projekt B, travelplanning or hobbies 

== Windows Terminal
https://www.heise.de/tipps-tricks/SSH-unter-Windows-10-nutzen-4224757.html[Windows Terminal] is a tool that enables the user to use CLIs of various kinds like git-bash, Powershell, CMD, WSL-Shells or Putty